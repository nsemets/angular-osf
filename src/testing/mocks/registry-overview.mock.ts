import { RegistryOverview } from '@osf/features/registry/models';
import { RegistrationReviewStates } from '@osf/shared/enums/registration-review-states.enum';
import { RegistryStatus } from '@osf/shared/enums/registry-status.enum';
import { RevisionReviewStates } from '@osf/shared/enums/revision-review-states.enum';

export const MOCK_REGISTRY_OVERVIEW: RegistryOverview = {
  id: 'test-registry-id',
  type: 'registration',
  isPublic: true,
  forksCount: 0,
  title: 'Test Registry',
  description: 'Test Description',
  dateModified: '2023-01-02T00:00:00Z',
  dateCreated: '2023-01-01T00:00:00Z',
  dateRegistered: '2023-01-01T00:00:00Z',
  registrationType: 'osf-registration',
  doi: '10.1234/test',
  tags: [],
  provider: undefined,
  contributors: [],
  citation: 'Test Citation',
  category: 'uncategorized',
  isFork: false,
  accessRequestsEnabled: false,
  nodeLicense: undefined,
  license: undefined,
  licenseUrl: undefined,
  identifiers: undefined,
  analyticsKey: 'test-analytics-key',
  currentUserCanComment: true,
  currentUserPermissions: [],
  currentUserIsContributor: false,
  currentUserIsContributorOrGroupMember: false,
  wikiEnabled: false,
  region: undefined,
  subjects: undefined,
  customCitation: 'Test Custom Citation',
  hasData: false,
  hasAnalyticCode: false,
  hasMaterials: false,
  hasPapers: false,
  hasSupplements: false,
  questions: {
    summary: 'Test summary',
    uploader: [],
  },
  registrationSchemaLink: 'https://example.com/schema',
  associatedProjectId: 'test-project-id',
  schemaResponses: [],
  status: RegistryStatus.Accepted,
  revisionStatus: RevisionReviewStates.Approved,
  reviewsState: RegistrationReviewStates.Accepted,
  archiving: false,
  embargoEndDate: '2024-01-01T00:00:00Z',
  withdrawn: false,
  withdrawalJustification: undefined,
  dateWithdrawn: null,
  rootParentId: null,
  iaUrl: null,
};
